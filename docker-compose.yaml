version: "3.9"

services:
  db:
    image: postgres:14.6-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres_test"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pddata:/var/lib/postgresql/data

  api:
    build:
      context: .
    tty: false
    volumes:
      - .:/code
    restart: on-failure
    ports:
      - "8088:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    command: python3 manage.py runserver
#      -python3 manage.py migrate

  redis:
    image: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./djangoProject/redis:/usr/local/etc/redis


  worker:
    build: .
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      api:
        condition: service_started
    links:
      - redis
    command: bash -c "celery -A config worker --beat --scheduler django --loglevel=info"

volumes:
  api:
  db:
    driver: local
